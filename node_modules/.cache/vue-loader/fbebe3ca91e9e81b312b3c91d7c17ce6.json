{"remainingRequest":"/Users/rossnicholls/self-billing-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/rossnicholls/self-billing-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rossnicholls/self-billing-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rossnicholls/self-billing-app/src/components/Set-Form.vue?vue&type=template&id=3c3d241f&scoped=true&","dependencies":[{"path":"/Users/rossnicholls/self-billing-app/src/components/Set-Form.vue","mtime":1570521104152},{"path":"/Users/rossnicholls/self-billing-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rossnicholls/self-billing-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/rossnicholls/self-billing-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rossnicholls/self-billing-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container\" }, [\n    _c(\"section\", [\n      _c(\"h5\", [_vm._v(\"Set up Form\")]),\n      _c(\"hr\"),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"h6\", [_vm._v(\"Estate Agent Details\")]),\n          _c(\"div\", { staticClass: \"cardMain\" }, [\n            _c(\"ul\", { staticClass: \"top-list\" }, [\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.estate[\"name\"],\n                      expression: \"estate['name']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"estate_agent_name\",\n                    type: \"input\",\n                    placeholder: \"Estate Agent name\"\n                  },\n                  domProps: { value: _vm.estate[\"name\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.estate, \"name\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"textarea\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.estate[\"address\"],\n                      expression: \"estate['address']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"estate_agent_address\",\n                    placeholder: \"Head Office\"\n                  },\n                  domProps: { value: _vm.estate[\"address\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.estate, \"address\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.estate[\"postcode\"],\n                      expression: \"estate['postcode']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"estate_agent_postcode\",\n                    type: \"input\",\n                    placeholder: \"Postcode\"\n                  },\n                  domProps: { value: _vm.estate[\"postcode\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.estate, \"postcode\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.estate[\"phone\"],\n                      expression: \"estate['phone']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"estate_agent_phone\",\n                    type: \"input\",\n                    placeholder: \"Phone number\"\n                  },\n                  domProps: { value: _vm.estate[\"phone\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.estate, \"phone\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.estate[\"email\"],\n                      expression: \"estate['email']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"estate_agent_info\",\n                    type: \"input\",\n                    placeholder: \"Email\"\n                  },\n                  domProps: { value: _vm.estate[\"email\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.estate, \"email\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ])\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"h6\", [_vm._v(\"Group AML Officer\")]),\n          _c(\"div\", { staticClass: \"cardMain\" }, [\n            _c(\"ul\", { staticClass: \"top-list\" }, [\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.aml[\"name\"],\n                      expression: \"aml['name']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"aml_name\",\n                    type: \"input\",\n                    placeholder: \"Name\"\n                  },\n                  domProps: { value: _vm.aml[\"name\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.aml, \"name\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.aml[\"phone\"],\n                      expression: \"aml['phone']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"aml_phone\",\n                    type: \"input\",\n                    placeholder: \"Phone number\"\n                  },\n                  domProps: { value: _vm.aml[\"phone\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.aml, \"phone\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.aml[\"email\"],\n                      expression: \"aml['email']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"aml_email\",\n                    type: \"input\",\n                    placeholder: \"Email\"\n                  },\n                  domProps: { value: _vm.aml[\"email\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.aml, \"email\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"textarea\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.aml[\"info\"],\n                      expression: \"aml['info']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"aml_info\",\n                    placeholder: \"Additional information\"\n                  },\n                  domProps: { value: _vm.aml[\"info\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.aml, \"info\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ])\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"h6\", [_vm._v(\"Point of contact for accounts\")]),\n          _c(\"div\", { staticClass: \"cardMain\" }, [\n            _c(\"ul\", { staticClass: \"top-list\" }, [\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.poc[\"name\"],\n                      expression: \"poc['name']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"poc_name\",\n                    type: \"input\",\n                    placeholder: \"Name\"\n                  },\n                  domProps: { value: _vm.poc[\"name\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.poc, \"name\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.poc[\"phone\"],\n                      expression: \"poc['phone']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"poc_phone\",\n                    type: \"input\",\n                    placeholder: \"Phone number\"\n                  },\n                  domProps: { value: _vm.poc[\"phone\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.poc, \"phone\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.poc[\"email\"],\n                      expression: \"poc['email']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"poc_email\",\n                    type: \"input\",\n                    placeholder: \"Email\"\n                  },\n                  domProps: { value: _vm.poc[\"email\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.poc, \"email\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"li\", [\n                _c(\"textarea\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.poc[\"info\"],\n                      expression: \"poc['info']\"\n                    }\n                  ],\n                  attrs: {\n                    name: \"poc_info\",\n                    placeholder: \"Additional information\"\n                  },\n                  domProps: { value: _vm.poc[\"info\"] },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.poc, \"info\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ])\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"h6\", [_vm._v(\"MI Reports Required\")]),\n          _c(\"div\", { staticClass: \"cardMI\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"d-flex\" },\n              [\n                _c(\"p\", { staticStyle: { width: \"30%\" } }, [\n                  _vm._v(\"Branch League Report:\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.reports[\"branchLeagueReport\"],\n                      expression: \"reports['branchLeagueReport']\"\n                    }\n                  ],\n                  attrs: { type: \"radio\", value: \"yes\" },\n                  domProps: {\n                    checked: _vm._q(_vm.reports[\"branchLeagueReport\"], \"yes\")\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.$set(_vm.reports, \"branchLeagueReport\", \"yes\")\n                    }\n                  }\n                }),\n                _c(\"label\", [_vm._v(\"Yes\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.reports[\"branchLeagueReport\"],\n                      expression: \"reports['branchLeagueReport']\"\n                    }\n                  ],\n                  attrs: { type: \"radio\", value: \"no\" },\n                  domProps: {\n                    checked: _vm._q(_vm.reports[\"branchLeagueReport\"], \"no\")\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.$set(_vm.reports, \"branchLeagueReport\", \"no\")\n                    }\n                  }\n                }),\n                _c(\"label\", [_vm._v(\"No\")]),\n                _c(\"transition\", { attrs: { name: \"slide\" } }, [\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.reports[\"branchLeagueReport\"] === \"yes\",\n                          expression: \"reports['branchLeagueReport'] === 'yes'\"\n                        }\n                      ]\n                    },\n                    [\n                      _c(\n                        \"p\",\n                        {\n                          staticStyle: {\n                            color: \"#4AC948\",\n                            \"padding-left\": \"15px\"\n                          }\n                        },\n                        [\n                          _c(\"b\", [_vm._v(\"Branch League Report\")]),\n                          _c(\"i\", { staticClass: \"fas fa-check-circle\" })\n                        ]\n                      )\n                    ]\n                  )\n                ])\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"d-flex\" },\n              [\n                _c(\"p\", { staticStyle: { width: \"30%\" } }, [\n                  _vm._v(\"Negotiator League Report: \")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.reports[\"negotiatorLeagueReport\"],\n                      expression: \"reports['negotiatorLeagueReport']\"\n                    }\n                  ],\n                  attrs: { type: \"radio\", value: \"yes\" },\n                  domProps: {\n                    checked: _vm._q(\n                      _vm.reports[\"negotiatorLeagueReport\"],\n                      \"yes\"\n                    )\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.$set(\n                        _vm.reports,\n                        \"negotiatorLeagueReport\",\n                        \"yes\"\n                      )\n                    }\n                  }\n                }),\n                _c(\"label\", [_vm._v(\"Yes\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.reports[\"negotiatorLeagueReport\"],\n                      expression: \"reports['negotiatorLeagueReport']\"\n                    }\n                  ],\n                  attrs: { type: \"radio\", value: \"no\" },\n                  domProps: {\n                    checked: _vm._q(_vm.reports[\"negotiatorLeagueReport\"], \"no\")\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.$set(\n                        _vm.reports,\n                        \"negotiatorLeagueReport\",\n                        \"no\"\n                      )\n                    }\n                  }\n                }),\n                _c(\"label\", [_vm._v(\"No\")]),\n                _c(\"transition\", { attrs: { name: \"slide\" } }, [\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value:\n                            _vm.reports[\"negotiatorLeagueReport\"] === \"yes\",\n                          expression:\n                            \"reports['negotiatorLeagueReport'] === 'yes'\"\n                        }\n                      ]\n                    },\n                    [\n                      _c(\n                        \"p\",\n                        {\n                          staticStyle: {\n                            color: \"#4AC948\",\n                            \"padding-left\": \"15px\"\n                          }\n                        },\n                        [\n                          _c(\"b\", [_vm._v(\"Negotiator League Report\")]),\n                          _vm._v(\"  \"),\n                          _c(\"i\", { staticClass: \"fas fa-check-circle\" })\n                        ]\n                      )\n                    ]\n                  )\n                ])\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"d-flex\" },\n              [\n                _c(\"p\", { staticStyle: { width: \"30%\" } }, [\n                  _vm._v(\"Uplift League Report:\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.reports[\"upliftLeagueReport\"],\n                      expression: \"reports['upliftLeagueReport']\"\n                    }\n                  ],\n                  attrs: { type: \"radio\", value: \"yes\" },\n                  domProps: {\n                    checked: _vm._q(_vm.reports[\"upliftLeagueReport\"], \"yes\")\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.$set(_vm.reports, \"upliftLeagueReport\", \"yes\")\n                    }\n                  }\n                }),\n                _c(\"label\", [_vm._v(\"Yes\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.reports[\"upliftLeagueReport\"],\n                      expression: \"reports['upliftLeagueReport']\"\n                    }\n                  ],\n                  attrs: { type: \"radio\", value: \"no\" },\n                  domProps: {\n                    checked: _vm._q(_vm.reports[\"upliftLeagueReport\"], \"no\")\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.$set(_vm.reports, \"upliftLeagueReport\", \"no\")\n                    }\n                  }\n                }),\n                _c(\"label\", [_vm._v(\"No\")]),\n                _c(\"transition\", { attrs: { name: \"slide\" } }, [\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.reports[\"upliftLeagueReport\"] === \"yes\",\n                          expression: \"reports['upliftLeagueReport'] === 'yes'\"\n                        }\n                      ]\n                    },\n                    [\n                      _c(\n                        \"p\",\n                        {\n                          staticStyle: {\n                            color: \"#4AC948\",\n                            \"padding-left\": \"15px\"\n                          }\n                        },\n                        [\n                          _c(\"b\", [_vm._v(\"Uplift League Report\")]),\n                          _c(\"i\", { staticClass: \"fas fa-check-circle\" })\n                        ]\n                      )\n                    ]\n                  )\n                ])\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"d-flex\" },\n              [\n                _c(\"p\", { staticStyle: { width: \"30%\" } }, [\n                  _vm._v(\"Zero List Report:\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.reports[\"zeroListReport\"],\n                      expression: \"reports['zeroListReport']\"\n                    }\n                  ],\n                  attrs: { type: \"radio\", value: \"yes\" },\n                  domProps: {\n                    checked: _vm._q(_vm.reports[\"zeroListReport\"], \"yes\")\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.$set(_vm.reports, \"zeroListReport\", \"yes\")\n                    }\n                  }\n                }),\n                _c(\"label\", [_vm._v(\"Yes\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.reports[\"zeroListReport\"],\n                      expression: \"reports['zeroListReport']\"\n                    }\n                  ],\n                  attrs: { type: \"radio\", value: \"no\" },\n                  domProps: {\n                    checked: _vm._q(_vm.reports[\"zeroListReport\"], \"no\")\n                  },\n                  on: {\n                    change: function($event) {\n                      return _vm.$set(_vm.reports, \"zeroListReport\", \"no\")\n                    }\n                  }\n                }),\n                _c(\"label\", [_vm._v(\"No\")]),\n                _c(\"transition\", { attrs: { name: \"slide\" } }, [\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.reports[\"zeroListReport\"] === \"yes\",\n                          expression: \"reports['zeroListReport'] === 'yes'\"\n                        }\n                      ]\n                    },\n                    [\n                      _c(\n                        \"p\",\n                        {\n                          staticStyle: {\n                            color: \"#4AC948\",\n                            \"padding-left\": \"15px\"\n                          }\n                        },\n                        [\n                          _c(\"b\", [_vm._v(\"Zero List Report\")]),\n                          _c(\"i\", { staticClass: \"fas fa-check-circle\" })\n                        ]\n                      )\n                    ]\n                  )\n                ])\n              ],\n              1\n            )\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"h6\", [_vm._v(\"Add a Branch\")]),\n          _c(\"div\", { staticClass: \"addNegotiatorCard\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"dunno\" },\n              [\n                _c(\"transition\", { attrs: { name: \"slide\" } }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"top-list\" },\n                    _vm._l(_vm.branches, function(branch, index) {\n                      return _c(\"div\", { staticClass: \" padding\" }, [\n                        _c(\"p\", [_vm._v(\"Branch details\")]),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: branch.one,\n                              expression: \"branch.one\"\n                            }\n                          ],\n                          attrs: { type: \"input\", placeholder: \"Branch name\" },\n                          domProps: { value: branch.one },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(branch, \"one\", $event.target.value)\n                            }\n                          }\n                        }),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: branch.two,\n                              expression: \"branch.two\"\n                            }\n                          ],\n                          attrs: {\n                            type: \"input\",\n                            placeholder: \"Branch address\"\n                          },\n                          domProps: { value: branch.two },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(branch, \"two\", $event.target.value)\n                            }\n                          }\n                        }),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: branch.three,\n                              expression: \"branch.three\"\n                            }\n                          ],\n                          attrs: {\n                            type: \"input\",\n                            placeholder: \"Branch postcode\"\n                          },\n                          domProps: { value: branch.three },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(branch, \"three\", $event.target.value)\n                            }\n                          }\n                        }),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: branch.four,\n                              expression: \"branch.four\"\n                            }\n                          ],\n                          attrs: { type: \"input\", placeholder: \"Branch email\" },\n                          domProps: { value: branch.four },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(branch, \"four\", $event.target.value)\n                            }\n                          }\n                        }),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: branch.five,\n                              expression: \"branch.five\"\n                            }\n                          ],\n                          attrs: {\n                            type: \"input\",\n                            placeholder: \" Branch phone number\"\n                          },\n                          domProps: { value: branch.five },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(branch, \"five\", $event.target.value)\n                            }\n                          }\n                        }),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: branch.six,\n                              expression: \"branch.six\"\n                            }\n                          ],\n                          attrs: {\n                            type: \"input\",\n                            placeholder: \" Branch Manager\"\n                          },\n                          domProps: { value: branch.six },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(branch, \"six\", $event.target.value)\n                            }\n                          }\n                        }),\n                        _c(\"textarea\", {\n                          staticStyle: { \"margin-top\": \"15px\" },\n                          attrs: { placeholder: \"Branch Manager Details\" }\n                        }),\n                        _c(\n                          \"div\",\n                          { staticClass: \"top-list\" },\n                          _vm._l(_vm.negotiators, function(negotiator, index) {\n                            return _c(\n                              \"div\",\n                              {\n                                staticStyle: {\n                                  \"margin-top\": \"25px\",\n                                  background: \"#FAFAFA\",\n                                  padding: \"15px\",\n                                  \"border-radius\": \"15px\"\n                                }\n                              },\n                              [\n                                _c(\"p\", [_vm._v(\"Negotiator details\")]),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: negotiator.one,\n                                      expression: \"negotiator.one\"\n                                    }\n                                  ],\n                                  attrs: { type: \"input\", placeholder: \"Name\" },\n                                  domProps: { value: negotiator.one },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        negotiator,\n                                        \"one\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                }),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: negotiator.two,\n                                      expression: \"negotiator.two\"\n                                    }\n                                  ],\n                                  attrs: {\n                                    type: \"input\",\n                                    placeholder: \"Job Title\"\n                                  },\n                                  domProps: { value: negotiator.two },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        negotiator,\n                                        \"two\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                }),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: negotiator.three,\n                                      expression: \"negotiator.three\"\n                                    }\n                                  ],\n                                  attrs: {\n                                    type: \"input\",\n                                    placeholder: \"Email\"\n                                  },\n                                  domProps: { value: negotiator.three },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        negotiator,\n                                        \"three\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                }),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: negotiator.four,\n                                      expression: \"negotiator.four\"\n                                    }\n                                  ],\n                                  attrs: {\n                                    type: \"input\",\n                                    placeholder: \"Phone Number\"\n                                  },\n                                  domProps: { value: negotiator.four },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        negotiator,\n                                        \"four\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                }),\n                                _c(\"br\"),\n                                _c(\n                                  \"button\",\n                                  {\n                                    staticClass: \"buttonMain\",\n                                    staticStyle: { \"margin-top\": \"15px\" },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.deleteNegotiator(index)\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"Delete Negotiator\")]\n                                )\n                              ]\n                            )\n                          }),\n                          0\n                        ),\n                        _c(\"div\", { staticClass: \"d-flex\" }, [\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"ml-auto buttonMain\",\n                              staticStyle: {\n                                \"margin-right\": \"15px\",\n                                \"margin-top\": \"15px\"\n                              },\n                              attrs: { type: \"button\" },\n                              on: { click: _vm.addNegotiator }\n                            },\n                            [_vm._v(\"Add a negotiator\")]\n                          )\n                        ]),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"buttonMain\",\n                            staticStyle: { \"margin-top\": \"10px\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.deleteBranches(index)\n                              }\n                            }\n                          },\n                          [_vm._v(\"Delete Branch\")]\n                        ),\n                        _c(\"hr\")\n                      ])\n                    }),\n                    0\n                  )\n                ])\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"d-flex\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"ml-auto buttonMain\",\n                  staticStyle: {\n                    \"margin-right\": \"15px\",\n                    \"margin-bottom\": \"15px\"\n                  },\n                  attrs: { type: \"button\" },\n                  on: { click: _vm.addBranches }\n                },\n                [_vm._v(\"Add a Branch\")]\n              )\n            ])\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"d-flex\" }, [\n        _c(\n          \"button\",\n          {\n            staticClass: \"ml-auto buttonMain\",\n            staticStyle: { \"margin-bottom\": \"15px\" },\n            attrs: { type: \"button\" },\n            model: {\n              value: _vm.saveButton[\"save\"],\n              callback: function($$v) {\n                _vm.$set(_vm.saveButton, \"save\", $$v)\n              },\n              expression: \"saveButton['save']\"\n            }\n          },\n          [_vm._v(\"Save\")]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}